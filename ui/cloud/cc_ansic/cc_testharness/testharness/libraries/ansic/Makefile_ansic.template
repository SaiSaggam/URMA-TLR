# ***************************************************************************
# Copyright (c) 2014 Digi International Inc.,
# All rights not expressly granted are reserved.
# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.
# 
# Digi International Inc. 11001 Bren Road East, Minnetonka, MN 55343
#
# ***************************************************************************
# Use GNU C Compiler
CC = ${CC_VAR_COMPILER}
${CC_VAR_TARGET_PLATFORM}

# Location of Private Connector Code.
CONNECTOR_DIR=${CC_VAR_CONNECTOR_DIR}
# Locate of Public Include Header Files.
PUBLIC_HEADER_DIR=${CC_VAR_PUBLIC_HEADER_DIR}
${CC_VAR_PLATFORM_DIR}

# Resolves where to find Source files.
vpath $(CONNECTOR_DIR)/%.c
${CC_VAR_PLATFORM_VPATH}

# CFLAG Definition
CFLAGS += $(DFLAGS)
# Enable Compiler Warnings
CFLAGS += -Winit-self -Wbad-function-cast -Wpointer-arith
CFLAGS += -Wmissing-parameter-type -Wstrict-prototypes -Wformat-security 
CFLAGS += -Wformat-y2k -Wold-style-definition -Wcast-align -Wformat-nonliteral 
CFLAGS += -Wpadded -Wredundant-decls -Wvariadic-macros
CFLAGS += -Wall -Werror -Wextra -pedantic
CFLAGS += -Wno-error=padded -Wno-error=format-nonliteral -Wno-unused-function -Wno-missing-field-initializers 
# Use ANSIC 99
CFLAGS +=-std=c99 
# Include POSIX and GNU features.
CFLAGS += -D_POSIX_C_SOURCE=200112L -D_GNU_SOURCE 
# Include Public Header Files.
CFLAGS += -iquote. -iquote$(PUBLIC_HEADER_DIR)/custom -iquote$(PUBLIC_HEADER_DIR)
${CC_VAR_PLATFORM_HEADER_INCLUDE}
${CC_VAR_GAMMU_INCLUDE}

ifeq ($(DEBUG),true)
CFLAGS += -g -O0 -DDEBUG
else
# Optimize for Size
CFLAGS += -Os
endif

# Target output to generate.
${CC_VAR_APP_SRCS}
PRIVATE_SRCS = $(CONNECTOR_DIR)/connector_api.c
${CC_VAR_PLATFORM_SRCS}
${CC_VAR_SRCS}

# Libraries to Link
${CC_VAR_LIBS}

# Generated Sample Executable Name.
SAMPLE = connector

# since each of the samples shares private and platform files, do a clean each time we make
.PHONY:all
all: clean $(SAMPLE)

# Linking Flags.
LDFLAGS += $(DFLAGS) -Wl,-Map,$(SAMPLE).map,--sort-common

OBJS = $(SRCS:.c=.o)

$(SAMPLE): $(OBJS)
	$(CC) $(LDFLAGS) $^ $(LIBS) -o $@
	${CC_VAR_POST_SAMPLE}


.PHONY: clean
clean:
	-rm -f $(SAMPLE) $(OBJS) $(SAMPLE).map
