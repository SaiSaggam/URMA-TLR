#!/bin/sh

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

LOGGER_USER="-p user.debug -t tlr_dhcp_client"
RESOLV_CONF="/ram/var/dns/$interface/resolv.conf"
NAME_SERVERS_FILE="/ram/var/dns/$interface/udhcpc_nameservers"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"
env > "/ram/var/dns/env.txt"

case "$1" in
	deconfig)
		/sbin/ifconfig $interface 0.0.0.0
		;;

	renew|bound)
		/sbin/ifconfig $interface $ip $BROADCAST $NETMASK

		[ -n "${dns}" ] && echo "${dns}" > $NAME_SERVERS_FILE
		new_resolv_conf="/ram/var/dns/${interface}/new_resolv.conf"
		search_key="udhcpc_search_key"
		echo "# Generated by udhcpc default.script" > ${new_resolv_conf}
		if [ -n "${dns}" ] && ! /bin/grep ${search_key} ${RESOLV_CONF} &> /dev/null ; then
			for i in $dns ; do
				echo adding dns $i
				echo nameserver $i >> ${new_resolv_conf}
			done
		else	# keep the old nameservers
			grep ${search_key} ${RESOLV_CONF} >> ${new_resolv_conf}
		fi
		[ -n "$domain" ] && echo search $domain >> ${new_resolv_conf}
		chmod +r ${new_resolv_conf}
		mv -f ${new_resolv_conf} ${RESOLV_CONF}
		if [ -n "$router" ]; then
		    # $router may contain a list of gateways so load the command line argument strings
		    # with the list.  "set -- $router" will load $1 with the first gateway in the list
		    set -- $router
		    result=`sendmsg ifman 1 dhcp_assigned_gateway wan $interface $1`
		    if [ "$result" != "OK" ] ; then
		        logger $LOGGER_USER "Unable to notify ifman of gateway assignment for $interface"
		    fi
        fi
		;;
esac

exit 0
