#!/bin/sh
[ -f /usr/bin/3g-scriptlib ] && . /usr/bin/3g-scriptlib
[ ! -f /usr/bin/3g-scriptlib ] && [ -f /tmp/3g-scriptlib ] && . /tmp/3g-scriptlib

get_index "$1" "$2" 

#get_config ${Index} ${Index_3G}
idx3G_status=`expr ${Index_3G} + 1`
echo "O3G/SCRIPT: 3g-dualsim-action Index=$Index, Index_3G=$Index_3G  for [3G$idx3G_status]"
get_sim_mode


CSID_S_3G_DUALSIM_SIMCARD_FLAG="`rdcsman 0x801e7c6$Index_3G u8`"
CSID_S_3G_DUALSIM_CARDSTATUS="`rdcsman 0x801e756$Index_3G u16`"
CSID_S_3G_MULTIWAN_SIM_STATUS="`rdcsman 0x801e3c0${idx3G_status} u32`"
CSID_S_3G_DUALSIM_DOWN_FLAG="`rdcsman 0x801e7c7$Index_3G u8`"

SIMCARD_MODE=$CSID_C_3G_MULTIWAN_SIMCARD_MODE
SIMCARD_STATUS=$CSID_S_3G_DUALSIM_CARDSTATUS
SIMCPIN_STATUS=$CSID_S_3G_MULTIWAN_SIM_STATUS
sim_switch=1

APN_LIST_COUNT_FILE_PATH="/tmp/auto_apn_list_count_${Index_3G}"
APN_ACTIVATED_FILE_PATH="/tmp/auto_apn_activated_${Index_3G}"
 
logger -p user.debug -t "O3G/SCRIPT" "[3G$idx3G_status]dualsim_card=$SIMCARD_STATUS,SIMCARD_FLAG=$CSID_S_3G_DUALSIM_SIMCARD_FLAG,DOWN_FLAG=$CSID_S_3G_DUALSIM_DOWN_FLAG"

if [ "${SIMCARD_MODE}" == "0" ]; then
    CSID_C_3G_MULTIWAN_AUTO_APN="`rdcsman 0x001e216$Index_3G u16`"
else
    CSID_C_3G_MULTIWAN_AUTO_APN="`rdcsman 0x801e7c5$Index_3G u16`"
fi

if [ "${CSID_C_3G_MULTIWAN_AUTO_APN}" == "2" ] ; then
    [ -f /usr/bin/3g-apn-profile ] && . /usr/bin/3g-apn-profile

    if [ ! -f "${SIMSWITCH_CHECK_FILE}" ] ; then
        echo "0" > "${SIMSWITCH_CHECK_FILE}"
    fi
fi

if [ $CSID_S_3G_DUALSIM_SIMCARD_FLAG == "1" ] ; then
    # This is first time connect, dont do switch to connect 3g
    #logger -t "O3G/SCRIPT" "SIM is ready to connect 3G..."
    wrcsman "0x801e7c6$Index_3G 0"
    wrcsman "0x801e7c7$Index_3G 0"

    if [ $SIMCARD_MODE == "1" ] || [ $SIMCARD_MODE == "3" ] ; then 
        sim_switch=1
    else
        sim_switch=2
    fi
    #dualsim_switch $Index_3G -w $sim_switch
    return 0
fi

if [ $CSID_S_3G_DUALSIM_DOWN_FLAG == "1" ] ; then
    # Dont do switch to connect 3g
    #logger -t "O3G/SCRIPT" "SIM is ready to connect 3G..."
    wrcsman "0x801e7c6$Index_3G 0"
    wrcsman "0x801e7c7$Index_3G 0"
    return 0
fi

if [ "${CSID_C_3G_MULTIWAN_AUTO_APN}" == "2" ] ; then
    local SIMSWITCH_FOR_APN_PROFILE=`cat "${SIMSWITCH_CHECK_FILE}"`
    if [ "${SIMSWITCH_FOR_APN_PROFILE}" == "0" ] ; then 
        logger -t "O3G/SCRIPT" "Not finish all APN profiles, do not do SIM switch"
        echo "Not finish all APN profiles, do not do SIM switch"
        return 0
    elif [ "${SIMSWITCH_FOR_APN_PROFILE}" == "1" ] ; then
        rm -f ${SIMSWITCH_CHECK_FILE}

        if [ -f "${SET_COPS_FILE}" ] ; then
            rm -f ${SET_COPS_FILE}
        fi
    fi
fi

# This is to switch sim
if [ $SIMCARD_MODE == "1" ] ; then          #1:SIMA Prefer
    logger -t "O3G/SCRIPT" "SIMCARD_STATUS=$SIMCARD_STATUS, SIMCPIN_STATUS=$SIMCPIN_STATUS"
    if [ $SIMCARD_STATUS == "0" ] ; then
        #first time to check should be not go here
        sim_switch=1
        wrcsman "0x801e756$Index_3G $sim_switch"
        logger -t "O3G/SCRIPT" "To connect SIM$sim_switch"
        # write config to connecting csid
        dualsim_switch $Index_3G -w $sim_switch
        #logger -t "O3G/SCRIPT" "To connect SIM$sim_switch and write config only"
        #return 0

    elif [ $SIMCARD_STATUS == "1" ] ; then   #now is SIMA to switch SIMB
        logger -t "O3G/SCRIPT" "SIMA is disconnect to switch SIMB"
        sim_switch=2
    elif [ $SIMCARD_STATUS == "2" ] ; then   #now is SIMB to switch SIMA
        logger -t "O3G/SCRIPT" "SIMB is disconnect to switch SIMA"
        sim_switch=1
    fi

elif [ $SIMCARD_MODE == "2" ] ; then        #2:SIMB prefer

    if [ $SIMCARD_STATUS == "0" ] ; then
        #first time to check should be not go here
        sim_switch=2
        wrcsman "0x801e756$Index_3G $sim_switch"
        logger -t "O3G/SCRIPT" "To connect SIM$sim_switch"

        # write config to connecting csid
        dualsim_switch $Index_3G -w $sim_switch
        #logger -t "O3G/SCRIPT" "To connect SIM$sim_switch and write config only"
        #return 0

    elif [ $SIMCARD_STATUS == "1" ] ; then  #now is SIMA to switch SIMB
        logger -t "O3G/SCRIPT" "SIMA is disconnected to switch SIMB"
        sim_switch=2

    elif [ $SIMCARD_STATUS == "2" ] ; then   #now is SIMB to switch SIMA
        logger -t "O3G/SCRIPT" "SIMB is disconnected to switch SIMA"
        sim_switch=1
    fi

elif [ $SIMCARD_MODE == "3" ] ; then        #3:SIMA only
    logger -t "O3G/SCRIPT" "SIMA only to connect and write config"
    sim_switch=1
    wrcsman "0x801e756$Index_3G $sim_switch"
    # write config to connecting csid
    dualsim_switch $Index_3G -w $sim_switch
    return 0 
 
elif [ $SIMCARD_MODE == "4" ] ; then        #4:SIMB only

    logger -t "O3G/SCRIPT" "SIMB only to connect and write config"
    sim_switch=2
    wrcsman "0x801e756$Index_3G $sim_switch"
    # write config to connecting csid
    dualsim_switch $Index_3G -w $sim_switch
    return 0 

else                                    # not define to switch SIMA only for test
    logger -t "O3G/SCRIPT" "SIMA only to connect"
    sim_switch=1    
    return 0
fi

echo "O3G/SCRIPT: To switch 3G_index:$Index_3G sim:$sim_switch"
logger -t "O3G/DUALSIM" "To switch 3G_index:$Index_3G sim:$sim_switch"
dualsim_switch $Index_3G -s $sim_switch

[ -f "${APN_LIST_COUNT_FILE_PATH}" ] && rm -f "${APN_LIST_COUNT_FILE_PATH}"
[ -f "${APN_ACTIVATED_FILE_PATH}" ] && rm -f "${APN_ACTIVATED_FILE_PATH}"

return 1

#usage() {
#	 echo "$0 [index_usb] [index_3g]"
#	 exit 1
#}

