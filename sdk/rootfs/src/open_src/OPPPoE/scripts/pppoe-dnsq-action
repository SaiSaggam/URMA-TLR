#!/bin/sh

. /usr/bin/scriptlib

ETH=`rdcsman 0x8000F231 str`
LINUX_PLUGIN="/etc/ppp/plugins/rp-pppoe.so"    
ATM_PLUGIN="/etc/ppp/plugins/pppoatm.so"
PPPOE_CLR="/var/run/pppoe.clr"
LINK_NAME="pppoe"
PIDFILE_PPPD="/var/run/ppp-$LINK_NAME.pid"
RESOLV_CONF="/etc/resolv.conf"
WAN_TYPE="`rdcsman 0x00010003 u32`"    
SERV_NAME="`rdcsman 0x00040600 str`"
MAX_TIMEOUT=30
   
pppoe_connect()
{
    ifconfig $ETH up
    echo "ifconfig $ETH 0.0.0.0" >> $PPPOE_CLR

    # Combine PPP options 
    local PPP_OPTIONS=""
    PPP_OPTIONS="$PPP_OPTIONS plugin $LINUX_PLUGIN"
    PPP_OPTIONS="$PPP_OPTIONS nic-$ETH"

    if [ "$WAN_TYPE" = "80" ] ; then
        PPP_OPTIONS="$PPP_OPTIONS rp_pppoe_sess 0154:00:aa:bb:01:23:45 "
        # 0154 is session id , 00:aa:bb:01:23:45 is trendchip adsl default mac address
    fi      

    if [ "$SERV_NAME" != "" ]; then
        SERV_NAME="rp_pppoe_service $SERV_NAME"
        PPP_OPTIONS="$PPP_OPTIONS $SERV_NAME"
    fi 
    PPP_OPTIONS="$PPP_OPTIONS $ETH"

    if [ -e $ATM_PLUGIN ] && [ "$WAN_TYPE" = "80" ]; then
        VPI=`rdcsman 0x00410102 u32`
        VCI=`rdcsman 0x00410103 u32`
        ENC=`rdcsman 0x00410104 u32`
        if [ $ENC -eq 0 ]; then
            ENC="llc-encaps"
        else
            ENC="vc-encaps"
        fi
        PLUGIN_OPTS="plugin $PLUGIN_ATM $ENC $VPI.$VCI"
    fi    

    local LOCAL_IP="`rdcsman 0x00040300 ipv4`"
    if [ "$LOCAL_IP" != "0.0.0.0" ]; then
        PPP_OPTIONS="$PPP_OPTIONS $LOCAL_IP: "
    fi    

    local USER="`rdcsman 0x00040100 str`" #CSID_C_PPPOE_USER  
    if [ "$USER" != "" ]; then
        PPP_OPTIONS="$PPP_OPTIONS user $USER" 
    fi

    PPP_OPTIONS="$PPP_OPTIONS hide-password" 
    PPP_OPTIONS="$PPP_OPTIONS default-asyncmap"
    PPP_OPTIONS="$PPP_OPTIONS linkname $LINK_NAME" 
    PPP_OPTIONS="$PPP_OPTIONS debug" 
    #PPP_OPTIONS="$PPP_OPTIONS dump" 
    PPP_OPTIONS="$PPP_OPTIONS noauth" 
    PPP_OPTIONS="$PPP_OPTIONS nodetach" 
    PPP_OPTIONS="$PPP_OPTIONS noaccomp" 
    PPP_OPTIONS="$PPP_OPTIONS nodeflate" 
    PPP_OPTIONS="$PPP_OPTIONS nopcomp" 
    PPP_OPTIONS="$PPP_OPTIONS novj" 
    PPP_OPTIONS="$PPP_OPTIONS novjccomp"
    PPP_OPTIONS="$PPP_OPTIONS noccp"
    PPP_OPTIONS="$PPP_OPTIONS nomppe"
    PPP_OPTIONS="$PPP_OPTIONS nomppc"
    PPP_OPTIONS="$PPP_OPTIONS noipdefault"

    # On-demand / Manual 
    if [ "`rdcsman 0x00040900 u32`" != "1" ]; then
        PPP_OPTIONS="$PPP_OPTIONS ktune" 
        PPP_OPTIONS="$PPP_OPTIONS ipcp-accept-local" 
        PPP_OPTIONS="$PPP_OPTIONS ipcp-accept-remote"
        PPP_OPTIONS="$PPP_OPTIONS holdoff 3"
    fi
 
    # Get DNS info. from Server
    local IF_DNS1="`rdcsman 0x00040700 ipv4`"
    local IF_DNS2="`rdcsman 0x00040800 ipv4`"
    if [ "$IF_DNS1" = "0.0.0.0" -a "$IF_DNS2" = "0.0.0.0" ] ; then
        PPP_OPTIONS="$PPP_OPTIONS usepeerdns"     
    fi        

    local MTU_SIZE="`rdcsman 0x00040a00 u32`" 
    if [ "$MTU_SIZE" = "0" ]; then
        MTU_SIZE="mtu 1492 mru 1492"
    else         
        MTU_SIZE="mtu $MTU_SIZE mru $MTU_SIZE"
    fi        
    PPP_OPTIONS="$PPP_OPTIONS $MTU_SIZE" 

    local LCP_INTERVAL="`rdcsman 0x00040e00 u32`"   
    local LCP_FAILURE="`rdcsman 0x00040f00 u32`" 
    if [ "$LCP_INTERVAL" = "0" ] || [ "$LCP_FAILURE"  = "0" ]; then
        LCP_INTERVAL="lcp-echo-interval 30"
        LCP_FAILURE="lcp-echo-failure 6"
    else
        LCP_INTERVAL="lcp-echo-interval $LCP_INTERVAL"
        LCP_FAILURE="lcp-echo-failure $LCP_FAILURE"
    fi        
    PPP_OPTIONS="$PPP_OPTIONS $LCP_INTERVAL"
    PPP_OPTIONS="$PPP_OPTIONS $LCP_FAILURE"

    local up_script="/etc/ppp/ip-up-pppoe"
    echo "#!/bin/sh" > $up_script     
    echo "/usr/bin/pppoe-action ip-up \$*" >> $up_script
    #echo "/tmp/pppoe-action ip-up \$*" >> $up_script
    chmod +x $up_script
    PPP_OPTIONS="$PPP_OPTIONS ip-up $up_script"

    local down_script="/etc/ppp/ip-down-pppoe"
    echo "#!/bin/sh" > $down_script
    echo "/usr/bin/pppoe-action ip-down \$*" >> $down_script
    #echo "/tmp/pppoe-action ip-down \$*" >> $down_script
    chmod +x $down_script                                                            
    PPP_OPTIONS="$PPP_OPTIONS ip-down $down_script"
    
    pppd $PPP_OPTIONS
}

pppoe_start()
{
    if [ -e $PIDFILE_PPPD ] ; then
        echo "PPPOE Tunnel already running "
        return;
    fi

    # Secrets 
    local account="`rdcsman 0x00040100 str`" #CSID_C_PPPOE_USER  
    local passwd="`rdcsman 0x00040200 str`" #CSID_C_PPPOE_PASSWORD  
    sl_insert_secrets_file "$account" "$passwd"

    #clear last ppp auth fail temp file
    [ -e $PPPOE_CLR ] && sh $PPPOE_CLR 
    rm -rf /var/run/ppp_auth* $PPPOE_CLR 
    wrcsman "0x8001000E 0x00"

    echo "Start PPPOE session (Service Name: $SERV_NAME) ... "
    pppoe_connect & 
    sleep 2

    # Monitor connection
    local retry=0
    local pppoe_status=0
    while [ true ]; do
        if [ -e $PIDFILE_PPPD ] ; then
            sl_get_ppp_PID_IFname $PIDFILE_PPPD PPP_PID PPP_IF
            [ $? = 0 ] && pppoe_status="`rdcsman 0x80040700 u16`" 
        fi 	 
                    
        if [ "$pppoe_status" = "2" ]; then
            logger -t "pppoe" "Link is up and running on interface $PPP_IF (PID: $PPP_PID)"
            echo "pppoe-status: Link is up and running on interface $PPP_IF"
            break;
        elif [ -e /var/run/ppp_auth_fail ] ; then
            wrcsman "0x80010007 0x06 && \
                     0x80040700 0x06"
            
            pppoe_ip_down "Authentication fail!"
        else 
            if [ "$PPP_PID" != "" ]; then
                kill -0 $PPP_PID 2>/dev/null 
                [ "$?" != "0" ] && pppoe_ip_down "Connect fail!"
            fi

            if [ $retry -gt $MAX_TIMEOUT ] ; then
                pppoe_ip_down "Connect PPPOE tunnel Timeout !"
            else
                echo "PPPOE connecting ... (Retry: $retry, Status: $pppoe_status)"                
                retry=$(($retry+1))
            fi	            
        fi
        sleep 1
    done      
}

# $1 interface-name   e.g. ppp0, ppp1 ...etc
# $2 tty-device       e.g. /dev/modem ...
# $3 speed 
# $4 local-IP-address 
# $5 remote-IP-address 
# $6 ipparam          e.g. extra parameters   
pppoe_ip_up()
{
    logger -t "ip-up-pppoe" "$*"
    echo "ip-up-pppoe: $*"  

    #PPPOE DNS info.
    IF_DNS1="`rdcsman 0x00040700 ipv4`"
    IF_DNS2="`rdcsman 0x00040800 ipv4`"
    if [ "$IF_DNS1" = "0.0.0.0" -a "$IF_DNS2" = "0.0.0.0" ] ; then
        sl_get_DNS_in_resolv_conf IF_DNS1 IF_DNS2
    fi        

    #PPPOE interface info.
    IFNAME="$2"
    sl_get_IP_NM_GW_in_ifconfig $IFNAME IF_IP IF_NM IF_GW
    sl_get_uptime CNTTIME
	wrcsman "0x80040100 $CNTTIME && \
		 	 0x80040200 {$IF_IP} && \
			 0x80040300 {$IF_NM} && \
			 0x80040400 {$IF_GW} && \
			 0x80040500 {$IF_DNS1} && \
			 0x80040600 {$IF_DNS2} && \
			 0x80040C00  \"$IFNAME && \
			 0x80040700 0x02"      

    LOADSHARING=`rdcsman 0x004301c0 u32`
    SEAMLESS_MODE=`rdcsman 0x001e0080 u32`
    if [ -e /var/run/multiwan_enable ]    || 
       [ "$LOADSHARING"   = "1" ]         || 
       [ "$SEAMLESS_MODE" = "1" ]         || 
       [ -e /var/run/dont_update_wantype ]; then
        logger -p 8.7 -t "ip-up-pppoe" "Exit ip-up directly (Under LoadSharing, Seamless, MultiWAN)!\""
        rm -f /var/run/dont_update_wantype  
        exit 0 # may pppoe/l2tp/pppoe client -> do nothing
    fi   

	# Autoback
    AUTOBAK_MODE=`rdcsman 0x801e4000 u32`
	if [ "$AUTOBAK_MODE" = "1" ]; then			
        logger -p 8.7 -t "pppoe ip-up" "Under Autoback mode, dont write to local \""
		route delete default gw $IF_GW dev $IFNAME
        exit 0
    fi

    FAILOVER_MODE=`rdcsman 0x80430600 u32` 	   
    if [ "$FAILOVER_MODE" = "1" ]; then
        FAILOVER_WANTYPE=`rdcsman 0x0043000b u32`
        if [ $FAILOVER_WANTYPE -eq 6 ]; then  # pppoe is the backup wan
            wrcsman "0x8043000c $CNTTIME && \
                     0x80430002 {$IF_IP} && \
                     0x80430003 {$IF_NM} && \
                     0x80430004 {$IF_GW} && \
                     0x80430005 {$IF_DNS1} && \
                     0x80430006 {$IF_DNS2} && \
                     0x80430600 0x02 && \
                     0x8043000b \"$IFNAME"
        else  # pppoe is the main wan, and try to failback 
            logger -p 8.7 -t "pppoe ip-up" "Under failover mode, dont write to local \""
            route delete default gw $IF_GW dev $IFNAME
            exit 0
        fi
    fi      

    # Set DNS info to the head of /etc/resolv.conf
    sl_insert_dns_file /etc/resolv.conf $IF_DNS1 $IF_DNS2

    # Set as default Gateway
    route add default gw $IF_GW # Set WAN PPPOE as default gateway !
 
    # Write to Local WAN CSID 
    wrcsman	"0x80010002 {$IF_IP} && \
             0x80010003 {$IF_NM} && \
             0x80010004 {$IF_GW} && \
             0x80010005 {$IF_DNS1} && \
             0x80010006 {$IF_DNS2} && \
             0x8001000B \"$IFNAME && \
             0x80010007 0x02"        

    # Consider for LCS PPPoE for secondary DNS 
    if [ -e /usr/bin/lcs-pppoe ]; then
        /usr/bin/lcs-pppoe setdns
        /usr/bin/lcs-pppoe dmfilter 
    fi
    exit 0
}

pppoe_ip_down()
{
    logger -t "ip-down-pppoe" "$*"
    echo "ip-down-pppoe: $*"
    pppoe_stop
    exit 0
}

pppoe_stop()
{
    # Kill pppd for PPPoE
    if [ -r $PIDFILE_PPPD ] ; then
        sl_get_ppp_PID_IFname $PIDFILE_PPPD PPP_PID PPP_IF
        kill -0 $PPP_PID > /dev/null 2>&1
        [ $?  = 0 ] && kill $PPP_PID > /dev/null 2>&1
        [ $? != 0 ] && kill -9 $PPP_PID > /dev/null 2>&1
        rm -rf $PIDFILE_PPPD 
    fi	
    rm -f "/var/run/ppp_auth_*"

    # Clear PPPOE status 
    wrcsman "0x80040100 0x00 && \
             0x80040200 0x00 && \
             0x80040300 0x00 && \
             0x80040400 0x00 && \
             0x80040500 0x00 && \
             0x80040600 0x00 && \
             0x80040700 0x00 && \
             0x80040C00 0x00"

    [ -e $PPPOE_CLR ] && sh $PPPOE_CLR 

    LOADSHARING=`rdcsman 0x004301c0 u32`    
    SEAMLESS_MODE=`rdcsman 0x001e0080 u32`
    AUTOBAK_MODE=`rdcsman 0x801e4000 u32`
    if [ -e /var/run/multiwan_enable ]   ||
       [ "$LOADSHARING"      = "1" ]     || 
       [ "$SEAMLESS_MODE"    = "1" ]     ||
       [ "$AUTOBAK_MODE"     = "1" ]     ||
       [ -e /var/run/dont_update_wantype ]; then
        logger -p 8.7 -t "ip-down-pppoe" "Exit ip-down directly (Under Failover, Autoback, LoadSharing, Seamless, MultiWAN)!\""
        rm -f /var/run/dont_update_wantype  
        exit 0 # may pppoe/l2tp/pppoe client -> do nothing
    fi   

    # Failover
    FAILOVER_MODE=`rdcsman 0x80430600 u32`     
    if [ "$FAILOVER_MODE" = "1" ]; then
        FAILOVER_WANTYPE=`rdcsman 0x0043000b u32`
        if [ $FAILOVER_WANTYPE -eq 6 ]; then  # PPPoE is the backup wan
            wrcsman "0x8043000c 0x00 && \
                     0x80430002 0x00 && \
                     0x80430003 0x00 && \
                     0x80430004 0x00 && \
                     0x80430005 0x00 && \
                     0x80430006 0x00 && \
                     0x80430600 0x00 && \
                     0x8043000b 0x00"
        else  # PPPoE is the main wan, and try to failback 
            logger -p 8.7 -t "pppoe ip-down" "Under Failover mode, dont write to local \""
            exit 0
        fi
    fi      

    # Clear Local WAN 
    wrcsman "0x80010002 0x00 && \
             0x80010003 0x00 && \
             0x80010004 0x00 && \
             0x80010005 0x00 && \
             0x80010006 0x00 && \
             0x80010007 0x00 && \
             0x8001000B 0x00"     

    # Consider for LCS PPPoE for secondary DNS 
    if [ -e /usr/bin/lcs-pppoe ]; then
        /usr/bin/lcs-pppoe setdns
        /usr/bin/lcs-pppoe dmfilter 
    fi   
}

pppoe_status() 
{
    echo "PPPOE Service Name: $SERV_NAME"    
    echo "Autoback Mode: `rdcsman 0x801e4000 u32`"
    echo "Failover :`rdcsman 0x80430600 u32`"

    echo "CSID_S_LOCAL_WAN_IP       : `rdcsman 0x80010002 ipv4`"
    echo "CSID_S_LOCAL_WAN_NM       : `rdcsman 0x80010003 ipv4`"
    echo "CSID_S_LOCAL_WAN_GW       : `rdcsman 0x80010004 ipv4`"
    echo "CSID_S_LOCAL_WAN_PRIDNS   : `rdcsman 0x80010005 ipv4`"
    echo "CSID_S_LOCAL_WAN_SECDNS   : `rdcsman 0x80010006 ipv4`"
    echo "CSID_S_LOCAL_WAN_STATUS   : `rdcsman 0x80010007 u32`"
    echo "CSID_S_LOCAL_WAN_IF_NAME  : `rdcsman 0x8001000B str`"

    echo "CSID_S_PPPOE_CNT_TIME  : `rdcsman 0x80040100 u32`"
    echo "CSID_S_PPPOE_IF_NAME   : `rdcsman 0x80040c00 str`"
    echo "CSID_S_PPPOE_IF_IP     : `rdcsman 0x80040200 ipv4`"
    echo "CSID_S_PPPOE_IF_NM     : `rdcsman 0x80040300 ipv4`"
    echo "CSID_S_PPPOE_IF_GW     : `rdcsman 0x80040400 ipv4`"
    echo "CSID_S_PPPOE_IF_PRIDNS : `rdcsman 0x80040500 ipv4`"
    echo "CSID_S_PPPOE_IF_PRIDNS : `rdcsman 0x80040600 ipv4`"
    echo "CSID_S_PPPOE_CNT_STATUS: `rdcsman 0x80040700 u32`"

    echo "CSID_C_PPPOE_CNT_TYPE_UI : `rdcsman 0x00040912 u32`"
    echo "CSID_C_PPPOE_CNT_TYPE    : `rdcsman 0x00040900 u32`"
    echo "CSID_C_PPPOE_NAT_DISABLE : `rdcsman 0x0004000f u32`"
    echo "CSID_C_PPPOE_USER        : `rdcsman 0x00040100 str`"
    echo "CSID_C_PPPOE_PASSWORD    : `rdcsman 0x00040200 str`"
    echo "CSID_C_PPPOE_MTU         : `rdcsman 0x00040a00 u32`"
    echo "CSID_C_PPPOE_IDLETIME    : `rdcsman 0x00040b00 u32`"
}

usage() {
    echo "Usage:"
    echo "  $0: start/stop/restart"
}

# main ##########################################################
case "$1" in
	start)   pppoe_start;            ;;
	restart) pppoe_stop; pppoe_start; ;;
    stop)    pppoe_stop;             ;;	
    status)  pppoe_status;           ;;	
    ip-up)   pppoe_ip_up    $1 $2 $3 $4 $5 $6; ;;       
    ip-down) pppoe_ip_down  $1 $2 $3 $4 $5 $6; ;;       
	*)       usage; exit 1;         ;;
esac

exit 0		
			
			


